@model Hotline.Models.Reclamation

@{
    ViewData["Title"] = "Edit";
    var error = TempData["Error"] as string;

}

@if (!string.IsNullOrEmpty(error))
{
    <h2 class="alert-danger"> @error </h2>
}
<hr />
<div class="row mt-5" id="center">
    <div class="col-md-12">

        <a asp-action="Index" asp-controller="ReclamationsAdmin"><i class="fas fa-arrow-left fa-2x"></i></a>
        <h4 class="text-center mb-4">Affecter la réclamation N° @Model.Numero</h4>
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Numero" />
            <input type="hidden" asp-for="Client" />
            <input type="hidden" asp-for="Projet" />
            <input type="hidden" asp-for="Domaine" />
            <input type="hidden" asp-for="Description" />
            <input type="hidden" asp-for="DateSoumission" />
            <input type="hidden" asp-for="Statut" />


            <div class="form-group mt-2">
                <label asp-for="Responsable" class="control-label"></label>
                <select asp-for="Responsable" class="form-control"
                        asp-items="@(new SelectList(ViewBag.UsersList,"Id","Login"))"></select>
                <span asp-validation-for="Responsable" class="text-danger"></span>
            </div>
            <div class="form-group d-flex justify-content-center">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
