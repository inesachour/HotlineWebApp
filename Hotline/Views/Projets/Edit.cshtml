@model Hotline.Models.Projet

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Projet</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Nom" class="control-label"></label>
                <input asp-for="Nom" class="form-control" />
                <span asp-validation-for="Nom" class="text-danger"></span>
            </div>
            <div>
                <div class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Domaines)
                </div>
                <ul>
                    @foreach (var domaine in ViewBag.DomainesList)
                    {

                        <li class="col-sm-10">
                            @domaine.Nom
                            <a asp-controller="Domaines" asp-action="Delete" asp-route-id="@domaine.Id" asp-route-idProjet="@Model.Id">Delete</a>
                        </li>
                    }
                </ul>
            </div>

            <div class="form-group">
                <label asp-for="Domaines" class="control-label"></label>
                <input class="form-control mb-1" id="domaine" name="domaine" type="hidden" />
                <span class="text-danger"></span>
            </div>

            <button id="add" type="button">+</button>
            <button id="delete" type="button">-</button>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<script>
    var i = 1;
    $("#add").click(function () {
        var domaine = $('#domaine');
        var newDomaine = domaine.clone();
        newDomaine.empty();
        newDomaine.prop("name", "domaine".concat(i));
        newDomaine.prop("id", "domaine".concat(i));
        newDomaine.prop("type", "");
        i++;
        newDomaine.insertBefore(domaine);
    })
    $("#delete").click(function (){
        if (i > 1) {
            console.log("ok");
            i -= 1;
            console.log($("#domaine" + i));
            $("#domaine" + i).remove();
        }
    })

</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
